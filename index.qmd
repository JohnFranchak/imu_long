---
title: "Project Dashboard"
format: 
  html:
    page-layout: full
---

```{r}
#| echo: false
#| warning: false
#| error: false

library(tidyverse)
library(reactable)
library(reactablefmtr)
library(janitor)
library(lubridate)
dashboard <- read_csv("project_status/project_dashboard.csv")
```

| Last updated: `r file.info("project_status/project_dashboard.csv")$ctime` 
| Dataset contains `r length(unique(dashboard$id))` unique participants with `r nrow(dashboard)` overall sessions. 

```{r}
#| echo: false

dash_filt <- dashboard %>% select(-sessions_dir) %>% 
  clean_names(case = "title", abbreviations = c("ID", "IMU", "LENA")) %>% 
  rename(Paperwork = `Completed Paperwork`, Biostamp = `Biostamp Annotations`, `LENA ITS` = `LENA Downloaded`) %>% 
  mutate(Date = `Start Time`)
  
reactable(dash_filt, 
          filterable = TRUE, 
          searchable = TRUE, 
          compact = TRUE,
          striped = TRUE,
          defaultSorted = c("ID","Session"), 
          showPageSizeOptions = TRUE,
          pageSizeOptions = c(20, 40, 60, 80),
          paginationType = "jump",
          defaultPageSize = 40,
          defaultColDef = colDef(format = colFormat(percent = TRUE, digits = 1)),
          columnGroups = list(colGroup("Visit", columns = c("ID", "Session", "Date"), sticky = "left"),
                              colGroup("Model Performance", columns = c("Balanced Accuracy", "Overall Accuracy"))),
          columns = list(
            ID = colDef(format = colFormat(digits = 0), maxWidth = 50, align = "left"),
            Session = colDef(format = colFormat(digits = 0), maxWidth = 100, align = "left"),
            Date = colDef(format = colFormat(date = TRUE), minWidth = 130),
            `Start Time` = colDef(format = colFormat(time = TRUE), minWidth = 130),
            `End Time` = colDef(format = colFormat(time = TRUE), minWidth = 130),
            `Paperwork` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}, minWidth = 110),
            `Raw Videos` = colDef(style = function(value) {if (value > 0) list(color = "#008000") else list(color = "#e00000", fontWeight = "bold")}, format = colFormat(digits = 0)),
            `Converted Videos` = colDef(style = function(value) {if (value > 0) list(color = "#008000") else list(color = "#e00000", fontWeight = "bold")}, format = colFormat(digits = 0)),
            `IMU Files` = colDef(style = function(value) {if (value > 0) list(color = "#008000") else list(color = "#e00000", fontWeight = "bold")}, format = colFormat(digits = 0)),
            `Datavyu Files` = colDef(style = function(value) {if (value > 0) list(color = "#008000") else list(color = "#e00000", fontWeight = "bold")}, format = colFormat(digits = 0)),
            `Activity Exported` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}),
            `Biostamp` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}),
            `Infant Synced` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}),
            `LENA ITS` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}),
            `LENA Processed` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"}, minWidth = 130),
            `LENA Synced` = colDef(cell = function(value) {if (value > 0) "\u2714\ufe0f" else "\u274c"})
          )
          )
```
